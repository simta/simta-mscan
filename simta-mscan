#!/bin/bash
# content filter hub, sources /etc/mail/filters

PATH=/bin:/usr/bin/:/sbin:/usr/sbin:/usr/local/sbin
export PATH

# content filter return codes
# Results:
MESSAGE_ACCEPT=0
MESSAGE_TEMPFAIL=1
MESSAGE_REJECT=2
# Options:
MESSAGE_DELETE=4
MESSAGE_DISCONNECT=8
MESSAGE_TARPIT=16
MESSAGE_JAIL=32
MESSAGE_BOUNCE=64

filters=/etc/mail/filters

errors=$(mktemp /tmp/mscan_errors.XXXXXXXX)
exec 2>${errors}

filter_exit() {
    cat ${errors} | log
    rm -f $errors
    exit $1
}

# logging function
# usage: log <log msg>
log() {
    if [[ ${#SIMTA_CID} -eq 0 ]]; then
	pid="$PPID"
    else
	pid="$PPID.$SIMTA_CID"
    fi
    if [[ $# -eq 0 ]]; then
	logger -p mail.info -t "simta[$pid]: mscan"
    else
	logger -p mail.info -t "simta[$pid]: mscan" "$*"
    fi
}

# generic function to test whether variable is set
check_env() {
    if eval [ -z "$1" ]; then
	return 1
    else
	return 0
    fi
}

# check SIMTA_DFILE - path to message's Dfile
# may want to do additional checks in this function
check_dfile() {
    if [[ -z $SIMTA_DFILE ]]; then
	return 1
    else
	return 0
    fi
}

# check SIMTA_TFILE - path to message's tfile
# may want to do additional checks in this function
check_tfile() {
    if [[ -z $SIMTA_TFILE ]]; then
	return 1
    else
	return 0
    fi
}

if [[ -d $filters ]]; then
    for script in $(ls $filters); do
	if [[ -x ${filters}/${script} ]]; then
	    . ${filters}/${script}
	fi
    done
fi

# if we made it this far then deliver the mail
filter_exit $MESSAGE_ACCEPT
